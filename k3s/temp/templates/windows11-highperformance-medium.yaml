apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: windows11-highperformance-medium
  annotations:
    openshift.io/display-name: "Microsoft Windows 11 VM"
    description: >-
      Template for Microsoft Windows 11 VM.
      A PVC with the Windows disk image must be available.
    tags: "hidden,kubevirt,virtualmachine,windows"
    iconClass: "icon-windows"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"
    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    defaults.template.kubevirt.io/network: default
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.memory.guest
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks
    name.os.template.kubevirt.io/win11: Microsoft Windows 11
  labels:
    os.template.kubevirt.io/win11: "true"
    workload.template.kubevirt.io/highperformance: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"
    template.kubevirt.io/version: "devel"
objects:
- apiVersion: kubevirt.io/v1
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: windows11-highperformance-medium
      vm.kubevirt.io/template.version: "devel"
      vm.kubevirt.io/template.revision: "1"
      app: ${NAME}
    annotations:
      vm.kubevirt.io/validations: |
        [
          {
            "name": "minimal-required-memory",
            "path": "jsonpath::.spec.domain.memory.guest",
            "rule": "integer",
            "message": "This VM requires more memory.",
            "min": 4294967296
          }, {
            "name": "windows-virtio-bus",
            "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
            "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
            "rule": "enum",
            "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
            "values": ["virtio"],
            "justWarning": true
          }, {
            "name": "windows-disk-bus",
            "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
            "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
            "rule": "enum",
            "message": "disk bus has to be either virtio or sata or scsi",
            "values": ["virtio", "sata", "scsi"]
          }, {
            "name": "windows-cd-bus",
            "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
            "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
            "rule": "enum",
            "message": "cd bus has to be sata",
            "values": ["sata"]
          }, {
            "name": "minimal-required-cores",
            "path": "jsonpath::.spec.domain.cpu.cores",
            "rule": "integer",
            "message": "This VM requires more cores.",
            "min": 2
          }
        ]
  spec:
    dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          storage:
            resources:
              requests:
                storage: 64Gi
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
    runStrategy: Halted
    template:
      metadata:
        annotations:
          vm.kubevirt.io/os: "windows11"
          vm.kubevirt.io/workload: "highperformance"
          vm.kubevirt.io/flavor: "medium"
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: medium
      spec:
        architecture: amd64
        domain:
          clock:
            utc: {}
            timer:
              hpet:
                present: false
              pit:
                tickPolicy: delay
              rtc:
                tickPolicy: catchup
              hyperv: {}
          cpu:
            sockets: 1
            cores: 2
            threads: 1
            dedicatedCpuPlacement: True
            isolateEmulatorThread: True
          memory:
            guest: 4Gi
          features:
            acpi: {}
            apic: {}
            smm: {}
            hyperv:
              relaxed: {}
              vapic: {}
              vpindex: {}
              spinlocks:
                spinlocks: 8191
              synic: {}
              synictimer:
                direct: {}
              tlbflush: {}
              frequencies: {}
              reenlightenment: {}
              ipi: {}
              runtime: {}
              reset: {}
          firmware:
            bootloader:
              efi:
                secureBoot: true
          devices:
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            interfaces:
            - masquerade: {}
              model: virtio
              name: default
            inputs:
              - type: tablet
                bus: usb
                name: tablet
            tpm: {}
        terminationGracePeriodSeconds: 3600
        volumes:
        - dataVolume:
            name: ${NAME}
          name: rootdisk
        networks:
        - name: default
          pod: {}
parameters:
- name: NAME
  description: VM name
  generate: expression
  from: "windows11-[a-z0-9]{6}"
- name: DATA_SOURCE_NAME
  description: Name of the DataSource to clone
  value: win11
- name: DATA_SOURCE_NAMESPACE
  description: Namespace of the DataSource
  value: kubevirt-os-images
